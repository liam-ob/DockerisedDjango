version: "3.9"

x-atteris-project:
  &example-project
  type: bind
  source: ./
  target: /code/

services:
  db:
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=$SQL_USER
      - POSTGRES_PASSWORD=$SQL_PASSWORD
      - POSTGRES_DB=$SQL_DATABASE

  redis:
    volumes:
      - redis:/data
    container_name: redis
    image: redis:5
    restart: unless-stopped
    ports:
      - 6379:6379

  web:
    restart: on-failure
    working_dir: /code/example_docker
    build:
      context: .
      dockerfile: docker/web/Dockerfile
    image: dd/web
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - *example-project
      # mount a drive here?
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    env_file:
      - .env

  channels:
    restart: on-failure
    image: dd/web
    working_dir: /code/example_docker
    command: daphne -b 0.0.0.0 -p 8001 example_docker.asgi:application
    volumes:
      - *example-project
    ports:
      - "8001:8001"
    links:
      - redis
    depends_on:
      - web
      - db
      - redis
    env_file:
      - .env
    # use a tag on this for end product: https://docs.docker.com/compose/environment-variables/

  celery-worker:
#    restart: always
    image: dd/web
    working_dir: /code
    command: ./docker/celery-worker/entry.sh
    volumes:
      - *example-project
    depends_on:
      - db
      - redis
      - web
    environment:
      - POSTGRES_USER=$SQL_USER
      - POSTGRES_PASSWORD=$SQL_PASSWORD
      - POSTGRES_DB=$SQL_DATABASE
    env_file:
      - .env
#    networks:
#      - db
#      - redis
#      - celery-worker

  flower:
    image: dd/web
    working_dir: /code
    command: ./docker/celery-flower/entry.sh
    volumes:
      - *example-project
    environment:
      - POSTGRES_USER=$SQL_USER
      - POSTGRES_PASSWORD=$SQL_PASSWORD
      - POSTGRES_DB=$SQL_DATABASE
    depends_on:
      - db
      - redis
      - web
      - celery-worker
    ports:
      - "5555:5555"
    env_file:
      - .env

# named volumes stored in docker only (will NOT map to your local machine)
volumes:
  # name the redis volume to avoid clutter
  redis:
  # name the postgres volume to avoid clutter
  postgres_data:
  # mount the projects folder from the atteris shares to the container?
  projects:
    driver: local
    driver_opts:
      type: cifs
      o: username=<user@domain>,password=,uid=,guid=
      device: //192.168.0.1/Shares/Projects
